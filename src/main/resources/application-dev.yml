spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ozang_db
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    open-in-view: false

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  data:
    redis:
      host: localhost
      port: 6379
      database: 0

# Elasticsearch 설정 추가 (선택적 활성화)
  elasticsearch:
    uris: ${ELASTICSEARCH_HOST:http://localhost:9200}
# Elasticsearch 기능 활성화 플래그 추가
# 환경변수로 ELASTICSEARCH_ENABLED=true 설정하면 활성화, 기본값은 false
elasticsearch:
  enabled: ${ELASTICSEARCH_ENABLED:false}

batch:
  weather:
    retention-days: 3
  scheduler:
    weather-cleanup:
      enabled: true
    token-cleanup:
      enabled: true
  job:
    enabled: false
  jdbc:
    initialize-schema: embedded

logging:
  level:
    root: INFO
    com.fourthread.ozang: DEBUG
    org.springframework.web: DEBUG
    org.springframework.batch: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    # ↓ 소켓 핸드셰이크·프레임 처리
    org.springframework.web.socket: DEBUG
    org.springframework.web.socket.server: DEBUG
    org.springframework.web.socket.client: DEBUG
    # ↓ STOMP 메시지 라우팅·브로커
    org.springframework.messaging.simp: TRACE
    org.springframework.web.socket.messaging: TRACE
    org.springframework.messaging.support: TRACE
    # ↓ SockJS fallback 사용 시
    org.springframework.web.socket.sockjs: DEBUG
cloud:
  aws:
    s3:
      bucket: ozang-dev-bucket

file:
  upload:
    clothes:
      path: dev/clothes/images/
      allowed-extensions: jpg,jpeg,png,gif,webp
      max-size: 10485760
    profiles:
      path: dev/profiles/images/
      allowed-extensions: jpg,jpeg,png,gif,webp
      max-size: 10485760
