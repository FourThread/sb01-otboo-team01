spring:
  application:
    name: O-ZANG

  datasource:
    url: jdbc:h2:mem:testdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GOOGLE_EMAIL}
    password: ${GOOGLE_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  data:
    redis:
      host: localhost
      port: 6379
      database: 0

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_RESTAPI_KEY}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: none
            client-name: Kakao
            scope:
              - profile_nickname
              - account_email
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  elasticsearch:
    uris: http://localhost:9200

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.H2Dialect
    open-in-view: false

  h2:
    console:
      enabled: true
      path: /h2-console

  profiles:
    active: dev

batch:
  weather:
    retention-days: 30  # 날씨 데이터 보관 기간 (일)

    # 스케줄러 설정
    scheduler:
      weather-cleanup:
        enabled: true  # 날씨 데이터 정리 스케줄러 활성화
      token-cleanup:
        enabled: true  # JWT 토큰 정리 스케줄러 활성화

  # Spring Batch 기본 설정
  batch:
    job:
      enabled: false #애플리케이션 시작 시 배치 작업 자동 실행 여부
    jdbc:
      initialize-schema: embedded #배치 메타데이터 테이블 초기화

logging:
  level:
    root: INFO
    com.fourthread.ozang: DEBUG
    org.springframework.web: DEBUG
    org.springframework.batch: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.elasticsearch.client: trace

weather:
  api:
    key:  ${WEATHER_API_KEY}
    base-url: http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0
    nowcast:
      url: ${weather.api.base-url}/getUltraSrtNcst
    forecast:
      url: ${weather.api.base-url}/getVilageFst

kakao:
  api:
    key: ${KAKAO_API_KEY}
    url: https://dapi.kakao.com

jwt:
  secret: ${JWT_SECRET}
  access-token-expiration-seconds: 600 #10분
  refresh-token-expiration-seconds: 86400 #24시간

admin:
  username: ${ADMIN_USERNAME}
  password: ${ADMIN_PASSWORD}
  email: ${ADMIN_EMAIL}

security:
  temp-password:
    expiration-hours: 1

app:
  timezone: Asia/Seoul

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ap-northeast-2
    stack:
      auto: false

# 이미지 업로드 설정
file:
  upload:
    clothes:
      path: clothes/images/
      allowed-extensions: jpg,jpeg,png,gif,webp
      max-size: 10485760  # 10MB
    profiles:
      path: profiles/images/
      allowed-extensions: jpg,jpeg,png,gif,webp
      max-size: 10485760  # 10MB


management:
  info:
    java:
      enabled: true
    os:
      enabled: true
  server:
    port: 8080
  endpoint:
    health:
      show-components: always
  endpoints:
    web:
      exposure:
        include: "*"

server:
  tomcat:
    mbeanregistry:
      enabled: true